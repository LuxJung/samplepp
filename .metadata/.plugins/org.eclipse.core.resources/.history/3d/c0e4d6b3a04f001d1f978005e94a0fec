package main;

import java.sql.Connection;
import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.sql.DataSource;

public class BoardDAO {
	private DataSource dataFactory;
	private Connection conn;
	private PreparedStatement pstmt;
	private final String BOARD_INSERT_QUERY = "INSERT INTO board_t (nickname, category, title, contents, goods_name)"
			+ " VALUES (?, ?, ?, ?, ?)";
	private final String BOARD_LIST_VIEW_QUERY = "SELECT num_aticle, nickname, title, deal_status, upload FROM board_t";
	private final String BOARD_SELECT_VIEW_QUERY = "SELECT * FROM board_t where num_aticle=?";
	public BoardDAO() {
		try {
			Context ctx = new InitialContext();
			Context envContext = (Context) ctx.lookup("java:/comp/env");
			dataFactory = (DataSource) envContext.lookup("mariadb");
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	// 게시판 리스트 뿌려주기
	public List<BoardVO> listBoard() {
		List<BoardVO> boardList = new ArrayList<>();
		try {
			conn = dataFactory.getConnection();
			String query = "select * from  board_t";
			System.out.println(query);
			pstmt = conn.prepareStatement(query);
			ResultSet rs = pstmt.executeQuery();
			while (rs.next()) {
				int num_aticle = rs.getInt("num_aticle");
				String nickname = rs.getString("nickname");
				String category = rs.getString("category");
				String title = rs.getString("title");
				String contents = rs.getString("contents");
				int intdeal_status = rs.getInt("deal_status");
				Date upload = rs.getDate("upload");
				String goods_name = rs.getString("goods_name");
				int num_cmnt = rs.getInt("num_cmnt");
				String deal_status = null;
				if (intdeal_status == 0) {
					deal_status = "판매중";
				} else if (intdeal_status == 1) {
					deal_status = "예약중";
				} else {
					deal_status = "판매완료";
				}
				BoardVO BoardVO = new BoardVO(num_aticle, nickname, category, title, contents, deal_status, upload,
						goods_name, num_cmnt);
				boardList.add(BoardVO);
			}
			rs.close();
			pstmt.close();
			conn.close();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return boardList;
	}

	public List<BoardVO> selectAllArticles() {
		List<BoardVO> atriclesList = new ArrayList<>();
		try {
			conn = dataFactory.getConnection();
			System.out.println("==================================");
			System.out.println("BOARD_LIST_VIEW_QUERY 쿼리문 = [ " + BOARD_LIST_VIEW_QUERY + " ]");
			pstmt = conn.prepareStatement(BOARD_LIST_VIEW_QUERY);
			ResultSet rs = pstmt.executeQuery();
			while (rs.next()) {
				int num_aticle = rs.getInt("num_aticle");
				String nickname = rs.getString("nickname");
				String title = rs.getString("title");
				int intdeal_status = rs.getInt("deal_status");
				String deal_status = null;
				if (intdeal_status == 0) {
					deal_status = "판매중";
				} else if (intdeal_status == 1) {
					deal_status = "예약중";
				} else {
					deal_status = "판매완료";
				}
				Date upload = rs.getDate("upload");
				BoardVO BoardVO = new BoardVO(num_aticle, nickname, title, deal_status, upload);
				atriclesList.add(BoardVO);
			}
			for (BoardVO boardVO : atriclesList) {
				System.out.print(
						"boardList 확인 = [ 넘버링 :"+boardVO.getNum_aticle()+" | 닉네임 : " + boardVO.getNickname() + " | 글제목 : " + boardVO.getTitle() + " ]");
				System.out.println();
			}
			System.out.println("==================================");
			rs.close();
			pstmt.close();
			conn.close();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return atriclesList;
	}

	//Create
	//이미지만 넣으면 됩니다.
	public void insertNewArticle(BoardVO board) {
		System.out.println("insertNewArticle 시작하냐?");
		try {
			conn = dataFactory.getConnection();
			String nickname = board.getNickname();
			String category = board.getCategory();
			String title = board.getTitle();
			String contents = board.getContents();
			String goods_name = board.getGoods_name();
			System.out.println("==================================");
			System.out.println("BOARD_INSERT 쿼리문 = [ " + BOARD_INSERT_QUERY + " ]");
			pstmt = conn.prepareStatement(BOARD_INSERT_QUERY);
			pstmt.setString(1, nickname);
			pstmt.setString(2, category);
			pstmt.setString(3, title);
			pstmt.setString(4, contents);
			pstmt.setString(5, goods_name);
			System.out.println("board_t 들어가는 내용 = [ 닉네임: " + nickname + ", 카테고리: " + category + ", 제목: " + title
					+ ", 내용: " + contents + ", 상품명: " + goods_name + " ]");
			System.out.println("==================================");
			pstmt.executeUpdate();
			pstmt.close();
			conn.close();
		} catch (Exception e) {
			e.printStackTrace();
		}

	}
	
	// Read
	public BoardVO selectArticle(int num_aticle) {
		System.out.println("selectArticle 시작하냐?");
		BoardVO boardVO = new BoardVO();
		try {
			conn = dataFactory.getConnection();
			System.out.println("==================================");
			System.out.println("BOARD_SELECT_VIEW_QUERY 쿼리문 = [ " + BOARD_SELECT_VIEW_QUERY + " ]");
			pstmt = conn.prepareStatement(BOARD_SELECT_VIEW_QUERY);
			pstmt.setInt(1, num_aticle);
			ResultSet rs = pstmt.executeQuery();
			rs.next();
			int search_num_aticle = rs.getInt("num_aticle");
			String nickname = rs.getString("nickname");
			String category = rs.getString("category");
			String title = rs.getString("title");
			String content = rs.getString("contents");
			int int_deal_status = rs.getInt("deal_status");
			String String_deal_status = null;
			if (int_deal_status == 0) {
				String_deal_status = "판매중";
			} else if (int_deal_status == 1) {
				String_deal_status = "예약중";
			} else {
				String_deal_status = "판매완료";
			}
			Date upload = rs.getDate("upload");
			String goods_name = rs.getString("goods_name");
			int num_cmnt = rs.getInt("num_cmnt");
			
			boardVO.setNum_aticle(search_num_aticle);
			boardVO.setNickname(nickname);
			boardVO.setCategory(category);
			boardVO.setTitle(title);
			boardVO.setContents(content);
			boardVO.setDeal_status(String_deal_status);
			boardVO.setUpload(upload);
			boardVO.setGoods_name(goods_name);
			boardVO.setNum_cmnt(num_cmnt);
			
			
			System.out.println(
					"boardVO 확인 = [ 넘버링 :"+boardVO.getNum_aticle()+
					" | 닉네임 : " + boardVO.getNickname() + 
					" | 글제목 : " + boardVO.getTitle() + " ]");
			System.out.println("==================================");
			
			rs.close();
			pstmt.close();
			conn.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return boardVO;
		
	}
	
	
	public void updateArticle (BoardVO boardVO) {
		System.out.println("updateArticle() 수행합니다");
		int num_aticle = boardVO.getNum_aticle();		// auto_inc
		String nickname = boardVO.getNickname(); 		//not null
		String category = boardVO.getCategory(); 		//not null
		String title = boardVO.getTitle();    			//not null
		String contents = boardVO.getContents(); 		//not null
		String deal_status = boardVO.getDeal_status();	//not null
		Date upload = boardVO.getUpload(); 				//default
		String goods_name = boardVO.getGoods_name(); 	//not null
		int num_cmnt = boardVO.getNum_cmnt(); 		 	//null ok
		// 추가 작업요망 String goods_img = boardVO.getGoods_img();
		try {
			
		} catch (Exception e) {
			String err = "!!! updateArticle() 에러 !!!";
			System.out.println(err);
			e.printStackTrace();
		}
	}
	

}
