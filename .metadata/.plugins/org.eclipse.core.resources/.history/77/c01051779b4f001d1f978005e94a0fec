package main;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;


@WebServlet("/board/*")
public class BoardContoller extends HttpServlet {
	private static final long serialVersionUID = 1L;
	private static final String BOARD_IMG_REPOSITORY = "../imgs";
	BoardService boardService;
	BoardVO boardVO;

	// BoardDAO boardDAO;
	public void init() throws ServletException {
		// boardDAO = new BoardDAO();
		boardService = new BoardService();
		boardVO= new BoardVO();
		System.out.println("초기화");
	}

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doHandle(request, response);
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		doHandle(request, response);
	}

	private void doHandle(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		request.setCharacterEncoding("utf-8");
		response.setContentType("text/html;charset=utf-8");
		String nextPage = "";
		String action = request.getPathInfo();
		System.out.println("action: " + action);
		try {
			List<BoardVO> articlesList = new ArrayList<>();
			if (action == null || action.equals("/listArticles.do")) {
				articlesList = boardService.listArticles();
				request.setAttribute("articlesList", articlesList);
				nextPage = "/listboard.jsp";
			} else if (action.equals("/addArticle.do")) {
				// page710 여기부터 바로 ㄱㄱ
				nextPage = "/addboard.jsp";
			} else if(action.equals("/createArticle.do")) {
				//C
				Map<String, String> articleMap = upload(request,response);
				String title = articleMap.get("title");
				String content = articleMap.get("content");
				String imgFileName = articleMap.get("imgFileName");
				System.out.println("오냐?");
				System.out.println("1");
				System.out.println("2"+boardVO.getNum_aticle());
				boardVO.setNickname("디폴트");
				System.out.println("3");
				boardVO.setCategory("디폴트");
				boardVO.setTitle(title); // addboard input에서 받아옴
				boardVO.setContents(content);
				boardVO.setGoods_name("디폴트");
				boardVO.setGoods_img(imgFileName);
				System.out.println("addArticle 직전");
				boardService.addArticle(boardVO);
				nextPage = "/listboard.jsp";
			} else if(action.equals("/readArticle.do")) {
				//R
				String num_aticle = request.getParameter("num_aticle");
				boardVO = boardService.viewArticle(Integer.parseInt(num_aticle));
				request.setAttribute("name", "불방망이타자");
				request.setAttribute("article", boardVO);
				nextPage = "/readboard.jsp";
			} else if(action.equals("/modifyArticles.do")) {
				//U
			} else if(action.equals("/deleteArticles.do")) {
				//D
			}
			RequestDispatcher dispatch = request.getRequestDispatcher(nextPage);
			dispatch.forward(request, response);
		} catch (Exception e) {
			// TODO: handle exception
		}
	}
	private Map <String, String> upload(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
	
	Map<String, String> articleMap = new HashMap<String, String>();
	String encoding = "utf-8";
	File currentDirPath = new File(BOARD_IMG_REPOSITORY);
	DiskFileItemFactory factory = new DiskFileItemFactory();
	factory.setRepository(currentDirPath);
	factory.setSizeThreshold(1024 * 1024);
	ServletFileUpload upload = new ServletFileUpload(factory);
	try {
		List items = upload.parseRequest(request);
		for (int i = 0; i < items.size(); i++) {
			FileItem fileItem = (FileItem) items.get(i);
			if (fileItem.isFormField()) {
				System.out.println(fileItem.getFieldName() + "=" + fileItem.getString(encoding));
				articleMap.put(fileItem.getFieldName(), fileItem.getString(encoding));
			} else {
				System.out.println("파라미터명:" + fileItem.getFieldName());
				System.out.println("파일명:" + fileItem.getName());
				System.out.println("파일크기:" + fileItem.getSize() + "bytes");
				//articleMap.put(fileItem.getFieldName(), fileItem.getName());
				if (fileItem.getSize() > 0) {
					int idx = fileItem.getName().lastIndexOf("\\");
					if (idx == -1) {
						idx = fileItem.getName().lastIndexOf("/");
					}

					String fileName = fileItem.getName().substring(idx + 1);
					System.out.println("파일명:" + fileName);
					articleMap.put(fileItem.getFieldName(), fileName);  //익스플로러에서 업로드 파일의 경로 제거 후 map에 파일명 저장
					File uploadFile = new File(currentDirPath + "\\" + fileName);
					fileItem.write(uploadFile);

				} // end if
			} // end if
		} // end for
	} catch (Exception e) {
		e.printStackTrace();
	}
	return articleMap;
}

}
